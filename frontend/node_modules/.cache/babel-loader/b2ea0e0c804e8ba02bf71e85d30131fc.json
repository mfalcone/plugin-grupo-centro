{"ast":null,"code":"import _slicedToArray from\"/Applications/XAMPP/xamppfiles/htdocs/grupocentro/wp-content/plugins/profesionales/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import Autocomplete from'react-autocomplete';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var Buscador=function Buscador(_ref){var especialidades=_ref.especialidades,buscarEspecialidad=_ref.buscarEspecialidad,limpiarFiltrado=_ref.limpiarFiltrado,buscarProfesional=_ref.buscarProfesional;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),especialidadvalue=_useState2[0],setEspecialidadValue=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),profesionalvalue=_useState4[0],setProfesionalValue=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),profesionales=_useState6[0],setProfesionales=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),filtro=_useState8[0],setFiltro=_useState8[1];useEffect(function(){var prof=[];especialidades.forEach(function(especialidad){especialidad.profesionales.forEach(function(profesional){prof.push(profesional);});});setProfesionales(prof);},[]);var estilos={zIndex:'9999',position:'absolute',top:'38px',left:'12px',right:'0',border:'1px solid #ccc',background:'#fff',overflow:'auto',maxHeight:'300px',padding:'0',width:'100px'};var seleccionarFiltro=function seleccionarFiltro(e){setFiltro(e.target.value);};var borrarFiltro=function borrarFiltro(){setFiltro(null);setEspecialidadValue('');setProfesionalValue('');document.getElementById('selectFilter').value='';limpiarFiltrado();};var seleccionarProfesional=function seleccionarProfesional(profesional){var apellidoProfesional=profesional.split(',')[0];buscarProfesional(apellidoProfesional);};return/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-10\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-auto\",children:/*#__PURE__*/_jsx(\"label\",{style:{marginTop:\"7px\"},children:\"Buscar por:\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-auto\",children:/*#__PURE__*/_jsxs(\"select\",{id:\"selectFilter\",className:\"form-select\",onChange:seleccionarFiltro,defaultValue:\"\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Seleccione...\"}),/*#__PURE__*/_jsx(\"option\",{value:\"E\",children:\"Especialidad\"}),/*#__PURE__*/_jsx(\"option\",{value:\"P\",children:\"Profesional\"})]})}),filtro==='E'&&/*#__PURE__*/_jsxs(\"div\",{className:\"col-auto position-relative\",children:[/*#__PURE__*/_jsx(Autocomplete,{className:\"form-control\",menuStyle:estilos,inputProps:{placeholder:\"buscar especialidad\",className:\"form-control\"},getItemValue:function getItemValue(item){return item.titulo;},items:especialidades,shouldItemRender:function shouldItemRender(item,value){return item.titulo.toLowerCase().indexOf(value.toLowerCase())>-1;},renderItem:function renderItem(item,isHighlighted){return/*#__PURE__*/_jsx(\"div\",{className:\"opciones\",style:{background:isHighlighted?'lightgray':'white'},children:item.titulo},item.id);},value:especialidadvalue,onChange:function onChange(e){return setEspecialidadValue(e.target.value);},onSelect:function onSelect(val){return setEspecialidadValue(val);}}),especialidadvalue!==''&&/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-light ms-2 mb-1\",onClick:function onClick(e){buscarEspecialidad(especialidadvalue);},children:\"Buscar Especialidad\"})]}),filtro==='P'&&/*#__PURE__*/_jsxs(\"div\",{className:\"col-auto position-relative\",children:[/*#__PURE__*/_jsx(Autocomplete,{menuStyle:estilos,inputProps:{placeholder:\"buscar profesional\",className:\"form-control\"},getItemValue:function getItemValue(item){return item.apellido+', '+item.nombre;},items:profesionales,shouldItemRender:function shouldItemRender(item,value){return item.apellido.toLowerCase().indexOf(value.toLowerCase())>-1;},renderItem:function renderItem(item,isHighlighted){return/*#__PURE__*/_jsxs(\"div\",{className:\"opciones\",style:{background:isHighlighted?'lightgray':'white'},children:[item.apellido,\", \",item.nombre]},item.id);},value:profesionalvalue,onChange:function onChange(e){return setProfesionalValue(e.target.value);},onSelect:function onSelect(val){return setProfesionalValue(val);}}),profesionalvalue!==''&&/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-light ms-2 mb-1\",onClick:function onClick(e){seleccionarProfesional(profesionalvalue);},children:\"Buscar Profesional\"})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-2 text-end\",children:(profesionalvalue!==''||especialidadvalue!=='')&&/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-light ms-2 mb-1\",onClick:borrarFiltro,children:\"Borrar Filtro\"})})]});};","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/grupocentro/wp-content/plugins/profesionales/frontend/src/componentes/buscador.js"],"names":["React","useState","useEffect","Autocomplete","Buscador","especialidades","buscarEspecialidad","limpiarFiltrado","buscarProfesional","especialidadvalue","setEspecialidadValue","profesionalvalue","setProfesionalValue","profesionales","setProfesionales","filtro","setFiltro","prof","forEach","especialidad","profesional","push","estilos","zIndex","position","top","left","right","border","background","overflow","maxHeight","padding","width","seleccionarFiltro","e","target","value","borrarFiltro","document","getElementById","seleccionarProfesional","apellidoProfesional","split","marginTop","placeholder","className","item","titulo","toLowerCase","indexOf","isHighlighted","id","val","apellido","nombre"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Autocomplete from 'react-autocomplete';\n\nexport const Buscador = ({ especialidades, buscarEspecialidad,limpiarFiltrado, buscarProfesional }) => {\n    const [especialidadvalue, setEspecialidadValue] = useState('');\n    const [profesionalvalue, setProfesionalValue] = useState('');\n    const [profesionales, setProfesionales] = useState([]);\n    const [filtro, setFiltro] = useState(null);\n\n    useEffect(() => {\n        const prof = [];\n        especialidades.forEach(especialidad => {\n            especialidad.profesionales.forEach(profesional => {\n                prof.push(profesional);\n            });\n        });\n        setProfesionales(prof);\n    }, []);\n\n    const estilos = {\n        zIndex: '9999',\n        position: 'absolute',\n        top: '38px',\n        left: '12px',\n        right: '0',\n        border: '1px solid #ccc',\n        background: '#fff',\n        overflow: 'auto',\n        maxHeight: '300px',\n        padding: '0',\n        width: '100px'\n    }\n\n    const seleccionarFiltro = (e) => {\n        setFiltro(e.target.value)\n    }\n\n    const borrarFiltro = () => {\n        setFiltro(null);\n        setEspecialidadValue('');\n        setProfesionalValue('');\n        document.getElementById('selectFilter').value = '';\n        limpiarFiltrado();\n    }\n\n    const seleccionarProfesional = (profesional) => {\n        const apellidoProfesional = profesional.split(',')[0];\n        buscarProfesional(apellidoProfesional)\n    }\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-10\">\n                <div className=\"row\">\n                    <div className=\"col-auto\">\n                        <label style={{marginTop:\"7px\"}}>Buscar por:</label>\n                    </div>\n                    <div className=\"col-auto\">\n                        <select id=\"selectFilter\" className=\"form-select\" onChange={seleccionarFiltro} defaultValue=\"\">\n                            <option value=\"\">Seleccione...</option>\n                            <option value=\"E\">Especialidad</option>\n                            <option value=\"P\">Profesional</option>\n                        </select>\n                    </div>\n                    {filtro === 'E' && <div className=\"col-auto position-relative\">\n                        <Autocomplete\n                            className=\"form-control\"\n                            menuStyle={estilos}\n                            inputProps={{ placeholder: \"buscar especialidad\", className: \"form-control\" }}\n                            getItemValue={(item) => item.titulo}\n                            items={especialidades}\n                            shouldItemRender={(item, value) => item.titulo.toLowerCase().indexOf(value.toLowerCase()) > -1}\n                            renderItem={(item, isHighlighted) =>\n                                <div className=\"opciones\" key={item.id} style={{ background: isHighlighted ? 'lightgray' : 'white' }}>\n                                    {item.titulo}\n                                </div>\n                            }\n                            value={especialidadvalue}\n                            onChange={(e) => setEspecialidadValue(e.target.value)}\n                            onSelect={(val) => setEspecialidadValue(val)}\n                        />\n                        {especialidadvalue !== '' && <button type=\"button\" className=\"btn btn-light ms-2 mb-1\" onClick={(e) => {buscarEspecialidad(especialidadvalue)}}>Buscar Especialidad</button>}\n                    </div>}\n                    {filtro === 'P' && <div className=\"col-auto position-relative\">\n                        <Autocomplete\n                            menuStyle={estilos}\n                            inputProps={{ placeholder: \"buscar profesional\", className: \"form-control\" }}\n                            getItemValue={(item) => item.apellido + ', ' + item.nombre}\n                            items={profesionales}\n                            shouldItemRender={(item, value) => item.apellido.toLowerCase().indexOf(value.toLowerCase()) > -1}\n                            renderItem={(item, isHighlighted) =>\n                                <div className=\"opciones\" key={item.id} style={{ background: isHighlighted ? 'lightgray' : 'white' }}>\n                                    {item.apellido}, {item.nombre}\n                                </div>\n                            }\n                            value={profesionalvalue}\n                            onChange={(e) => setProfesionalValue(e.target.value)}\n                            onSelect={(val) => setProfesionalValue(val)}\n                        />\n                        {profesionalvalue !== '' && <button type=\"button\" className=\"btn btn-light ms-2 mb-1\" onClick={(e) => {seleccionarProfesional(profesionalvalue)}}>Buscar Profesional</button>}\n                    </div>}\n                </div>\n            </div>\n            <div className=\"col-2 text-end\">\n                {(profesionalvalue !== '' || especialidadvalue !== '') && <button type=\"button\" className=\"btn btn-light ms-2 mb-1\" onClick ={borrarFiltro}>Borrar Filtro</button>}\n            </div>\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}