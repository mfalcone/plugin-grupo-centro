{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/grupocentro/wp-content/plugins/profesionales/frontend/src/componentes/buscador.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Autocomplete from 'react-autocomplete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Buscador = _ref => {\n  _s();\n\n  let {\n    especialidades\n  } = _ref;\n  const [especialidadvalue, setEspecialidadValue] = useState('');\n  const [profesionalvalue, setProfesionalValue] = useState('');\n  const [profesionales, setProfesionales] = useState([]);\n  const [filtro, setFiltro] = useState(null);\n  useEffect(() => {\n    const prof = [];\n    especialidades.forEach(especialidad => {\n      especialidad.profesionales.forEach(profesional => {\n        prof.push(profesional);\n      });\n    });\n    setProfesionales(prof);\n  }, []);\n  const estilos = {\n    zIndex: '9999',\n    position: 'absolute',\n    top: '45px',\n    left: '15px',\n    right: '0',\n    border: '1px solid #ccc',\n    background: '#fff',\n    overflow: 'auto',\n    maxHeight: '300px',\n    padding: '0',\n    width: '100px'\n  };\n\n  const seleccionarFiltro = e => {\n    setFiltro(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Buscar por:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-select\",\n          onChange: seleccionarFiltro,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            selected: true,\n            children: \"Seleccione...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"E\",\n            children: \"Especialidad\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"P\",\n            children: \"Profesional\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), filtro === 'E' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-auto position-relative\",\n        children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n          className: \"form-control\",\n          menuStyle: estilos,\n          inputProps: {\n            placeholder: \"buscar especialidad\",\n            className: \"form-control\"\n          },\n          getItemValue: item => item.titulo,\n          items: especialidades,\n          shouldItemRender: (item, value) => item.titulo.toLowerCase().indexOf(value.toLowerCase()) > -1,\n          renderItem: (item, isHighlighted) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: isHighlighted ? 'lightgray' : 'white'\n            },\n            children: item.titulo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this),\n          value: especialidadvalue,\n          onChange: e => setEspecialidadValue(e.target.value),\n          onSelect: val => setEspecialidadValue(val)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), especialidadvalue !== '' && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          class: \"btn btn-light ms-2 mb-1\",\n          children: \"Buscar Especialidad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 50\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 36\n      }, this), filtro === 'P' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-auto position-relative\",\n        children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n          menuStyle: estilos,\n          inputProps: {\n            placeholder: \"buscar profesional\",\n            className: \"form-control\"\n          },\n          getItemValue: item => item.apellido + ', ' + item.nombre,\n          items: profesionales,\n          shouldItemRender: (item, value) => item.apellido.toLowerCase().indexOf(value.toLowerCase()) > -1,\n          renderItem: (item, isHighlighted) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: isHighlighted ? 'lightgray' : 'white'\n            },\n            children: [item.apellido, \", \", item.nombre]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this),\n          value: profesionalvalue,\n          onChange: e => setProfesionalValue(e.target.value),\n          onSelect: val => setProfesionalValue(val)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), profesionalvalue !== '' && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          class: \"btn btn-light ms-2 mb-1\",\n          children: \"Buscar Profesional\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 49\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-2\",\n      children: (profesionalvalue !== '' || especialidadvalue !== '') && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        class: \"btn btn-light ms-2 mb-1\",\n        children: \"Borrar Filtro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 76\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Buscador, \"qNbdv0EDd3a2OZzxIAWj5PDicec=\");\n\n_c = Buscador;\n\nvar _c;\n\n$RefreshReg$(_c, \"Buscador\");","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/grupocentro/wp-content/plugins/profesionales/frontend/src/componentes/buscador.js"],"names":["React","useState","useEffect","Autocomplete","Buscador","especialidades","especialidadvalue","setEspecialidadValue","profesionalvalue","setProfesionalValue","profesionales","setProfesionales","filtro","setFiltro","prof","forEach","especialidad","profesional","push","estilos","zIndex","position","top","left","right","border","background","overflow","maxHeight","padding","width","seleccionarFiltro","e","target","value","placeholder","className","item","titulo","toLowerCase","indexOf","isHighlighted","val","apellido","nombre"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Autocomplete from 'react-autocomplete';\n\nexport const Buscador = ({ especialidades }) => {\n    const [especialidadvalue, setEspecialidadValue] = useState('');\n    const [profesionalvalue, setProfesionalValue] = useState('');\n    const [profesionales, setProfesionales] = useState([]);\n    const [filtro, setFiltro] = useState(null);\n\n    useEffect(() => {\n        const prof = [];\n        especialidades.forEach(especialidad => {\n            especialidad.profesionales.forEach(profesional => {\n                prof.push(profesional);\n            });\n        });\n        setProfesionales(prof);\n    }, []);\n\n    const estilos = {\n        zIndex: '9999',\n        position: 'absolute',\n        top: '45px',\n        left: '15px',\n        right: '0',\n        border: '1px solid #ccc',\n        background: '#fff',\n        overflow: 'auto',\n        maxHeight: '300px',\n        padding: '0',\n        width: '100px'\n    }\n\n    const seleccionarFiltro = (e) => {\n        setFiltro(e.target.value)\n    }\n    \n    return (\n        <div className=\"row\">\n            <div className=\"col-8\">\n                <div className=\"col-auto\">\n                    <label>Buscar por:</label>\n                </div>\n                <div className=\"col-auto\">\n                    <select className=\"form-select\" onChange={seleccionarFiltro}>\n                        <option selected>Seleccione...</option>\n                        <option value=\"E\">Especialidad</option>\n                        <option value=\"P\">Profesional</option>\n                    </select>\n                </div>\n                {filtro === 'E' && <div className=\"col-auto position-relative\">\n                    <Autocomplete\n                        className=\"form-control\"\n                        menuStyle={estilos}\n                        inputProps={{ placeholder: \"buscar especialidad\", className: \"form-control\" }}\n                        getItemValue={(item) => item.titulo}\n                        items={especialidades}\n                        shouldItemRender={(item, value) => item.titulo.toLowerCase().indexOf(value.toLowerCase()) > -1}\n                        renderItem={(item, isHighlighted) =>\n                            <div style={{ background: isHighlighted ? 'lightgray' : 'white' }}>\n                                {item.titulo}\n                            </div>\n                        }\n                        value={especialidadvalue}\n                        onChange={(e) => setEspecialidadValue(e.target.value)}\n                        onSelect={(val) => setEspecialidadValue(val)}\n                    />\n                    {especialidadvalue !== '' && <button type=\"button\" class=\"btn btn-light ms-2 mb-1\">Buscar Especialidad</button>}\n                </div>}\n                {filtro === 'P' && <div className=\"col-auto position-relative\">\n                    <Autocomplete\n                        menuStyle={estilos}\n                        inputProps={{ placeholder: \"buscar profesional\", className: \"form-control\" }}\n                        getItemValue={(item) => item.apellido + ', ' + item.nombre}\n                        items={profesionales}\n                        shouldItemRender={(item, value) => item.apellido.toLowerCase().indexOf(value.toLowerCase()) > -1}\n                        renderItem={(item, isHighlighted) =>\n                            <div style={{ background: isHighlighted ? 'lightgray' : 'white' }}>\n                                {item.apellido}, {item.nombre}\n                            </div>\n                        }\n                        value={profesionalvalue}\n                        onChange={(e) => setProfesionalValue(e.target.value)}\n                        onSelect={(val) => setProfesionalValue(val)}\n                    />\n                    {profesionalvalue !== '' && <button type=\"button\" class=\"btn btn-light ms-2 mb-1\">Buscar Profesional</button>}\n                </div>}\n            </div>\n            <div className=\"col-2\">\n                {(profesionalvalue !== '' || especialidadvalue !== '' ) && <button type=\"button\" class=\"btn btn-light ms-2 mb-1\">Borrar Filtro</button>}\n            </div>\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}