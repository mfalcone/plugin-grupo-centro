{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/grupocentro/wp-content/plugins/profesionales/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { BASEURL } from './lib/baseurl';\nimport { Especialidades } from './componentes/especialidades';\nimport './App.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [especialidades, setEspecialidades] = useState([]);\n  const [profesionales, setProfesionales] = useState([]);\n  const [especialidadesAMostrar, setEspecialidadesAMostrar] = useState([]);\n  const [cargando, setCargando] = useState(true);\n  useEffect(() => {\n    const headers = {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    };\n\n    const getProfecionales = () => {\n      fetch(BASEURL + '/wp-json/wp/v2/profesionales?_embed&filter[posts_per_page]=-1', {\n        headers: headers\n      }).then(function (response) {\n        return response.json();\n      }).then(function (myJson) {\n        setProfesionales(myJson);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    const getEspecialidades = () => {\n      fetch(BASEURL + '/wp-json/wp/v2/especialidades?_embed&filter[orderby]=slug&order=asc', {\n        headers: headers\n      }).then(function (response) {\n        return response.json();\n      }).then(function (myJson) {\n        setEspecialidades(myJson);\n        getProfecionales();\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    getEspecialidades();\n    setCargando(true);\n  }, []);\n  useEffect(() => {\n    const armarDatos = () => {\n      const especialidadesMostar = [];\n      especialidades.map((especialidad, index) => {\n        especialidadesMostar.push({\n          id: especialidad.id,\n          titulo: especialidad.title.rendered\n        });\n        const profesionalesAMostrar = [];\n        profesionales.filter((profesional, index) => {\n          if (profesional.post_meta_fields._especialidad_field[0] === especialidad.id.toString()) {\n            profesionalesAMostrar.push({\n              id: profesional.id,\n              apellido: profesional.post_meta_fields._apellido_meta_key[0],\n              nombre: profesional.post_meta_fields._nombre_meta_key[0],\n              matricula: profesional.post_meta_fields._matricula_meta_key[0],\n              genero: profesional.post_meta_fields._genero_meta_key[0]\n            });\n\n            if (profesional._embedded) {\n              profesionalesAMostrar[index].imagen = profesional._embedded['wp:featuredmedia'][0].media_details.sizes.medium.source_url;\n            }\n          }\n\n          return profesionalesAMostrar;\n        });\n        especialidadesMostar[index].profesionales = profesionalesAMostrar;\n        return null;\n      });\n      setEspecialidadesAMostrar(especialidadesMostar);\n    };\n\n    if (profesionales.length > 0 && especialidades.length > 0) {\n      armarDatos();\n    }\n  }, [profesionales, especialidades]);\n  useEffect(() => {\n    if (especialidadesAMostrar.length > 0) {\n      setCargando(false);\n    }\n  }, [especialidadesAMostrar]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [cargando && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 20\n    }, this), especialidadesAMostrar.length > 0 && /*#__PURE__*/_jsxDEV(Especialidades, {\n      especialidades: especialidadesAMostrar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 45\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"lUMOgiIjCVo1LuKb7Ysy4jbKqhA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/grupocentro/wp-content/plugins/profesionales/frontend/src/App.js"],"names":["React","Fragment","useEffect","useState","BASEURL","Especialidades","App","especialidades","setEspecialidades","profesionales","setProfesionales","especialidadesAMostrar","setEspecialidadesAMostrar","cargando","setCargando","headers","getProfecionales","fetch","then","response","json","myJson","catch","error","console","log","getEspecialidades","armarDatos","especialidadesMostar","map","especialidad","index","push","id","titulo","title","rendered","profesionalesAMostrar","filter","profesional","post_meta_fields","_especialidad_field","toString","apellido","_apellido_meta_key","nombre","_nombre_meta_key","matricula","_matricula_meta_key","genero","_genero_meta_key","_embedded","imagen","media_details","sizes","medium","source_url","length"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport { BASEURL } from './lib/baseurl';\nimport {Especialidades} from './componentes/especialidades';\nimport './App.scss';\n\nfunction App() {\n\n  const [especialidades, setEspecialidades] = useState([]);\n  const [profesionales, setProfesionales] = useState([]);\n  const [especialidadesAMostrar, setEspecialidadesAMostrar] = useState([]);\n  const [cargando, setCargando] = useState(true);\n\n  useEffect(() => {\n    const headers = {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    }\n\n    const getProfecionales = () => {\n      fetch(BASEURL + '/wp-json/wp/v2/profesionales?_embed&filter[posts_per_page]=-1', { headers: headers })\n        .then(function (response) {\n          return response.json();\n        })\n        .then(function (myJson) {\n          setProfesionales(myJson);\n        }).catch(function (error) {\n          console.log(error);\n        })\n        ;\n    }\n\n    const getEspecialidades = () => {\n      fetch(BASEURL + '/wp-json/wp/v2/especialidades?_embed&filter[orderby]=slug&order=asc', { headers: headers })\n        .then(function (response) {\n          return response.json();\n        })\n        .then(function (myJson) {\n          setEspecialidades(myJson);\n          getProfecionales()\n        }).catch(function (error) {\n          console.log(error);\n        })\n        ;\n    }\n    getEspecialidades();\n    setCargando(true);\n  }, [])\n\n  useEffect(() => {\n    const armarDatos = () => {\n      const especialidadesMostar = [];\n      especialidades.map((especialidad, index) => {\n        especialidadesMostar.push({\n          id: especialidad.id,\n          titulo: especialidad.title.rendered,\n        });\n        const profesionalesAMostrar = []\n  \n        profesionales.filter((profesional,index) => {\n          if (profesional.post_meta_fields._especialidad_field[0] === especialidad.id.toString()) {\n            profesionalesAMostrar.push({\n              id: profesional.id,\n              apellido: profesional.post_meta_fields._apellido_meta_key[0],\n              nombre: profesional.post_meta_fields._nombre_meta_key[0],\n              matricula: profesional.post_meta_fields._matricula_meta_key[0],\n              genero: profesional.post_meta_fields._genero_meta_key[0],\n            })\n            if(profesional._embedded){\n              profesionalesAMostrar[index].imagen = profesional._embedded['wp:featuredmedia'][0].media_details.sizes.medium.source_url;\n            }\n          }\n          return profesionalesAMostrar;\n        })\n        especialidadesMostar[index].profesionales = profesionalesAMostrar;\n  \n        return null;\n      })\n      setEspecialidadesAMostrar(especialidadesMostar);\n    }\n    if(profesionales.length > 0 && especialidades.length > 0){  \n      armarDatos()\n    }\n  }, [profesionales, especialidades])\n\n  useEffect(() => {\n    if (especialidadesAMostrar.length > 0) {\n      setCargando(false);\n    }\n  }, [especialidadesAMostrar])\n\n  return (\n    <Fragment>\n      {cargando && <div className=\"App\">Cargando...</div>}\n      {especialidadesAMostrar.length > 0 && <Especialidades especialidades={especialidadesAMostrar}/>}\n    </Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}